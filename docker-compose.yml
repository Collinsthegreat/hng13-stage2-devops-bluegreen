# --- docker-compose.yml ---
version: "3.9"

services:
  app_blue:
    image: ${BLUE_IMAGE}
    container_name: app_blue
    environment:
      - APP_POOL=blue
      - RELEASE_ID=${RELEASE_ID_BLUE}
    ports:
      - "${BLUE_PORT}:${APP_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:3000/healthz', res => process.exit(res.statusCode===200?0:1))\""]
      interval: 5s
      timeout: 3s
      retries: 5

  app_green:
    image: ${GREEN_IMAGE}
    container_name: app_green
    environment:
      - APP_POOL=green
      - RELEASE_ID=${RELEASE_ID_GREEN}
    ports:
      - "${GREEN_PORT}:${APP_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "node -e \"require('http').get('http://localhost:3000/healthz', res => process.exit(res.statusCode===200?0:1))\""]
      interval: 5s
      timeout: 3s
      retries: 5

  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - app_blue
      - app_green
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      # Use host bind mount for logs so we can append test lines
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/logs:/var/log/nginx
    restart: unless-stopped
    environment:
      - PRIMARY=${PRIMARY}
      - BACKUP=${BACKUP}
      - APP_PORT=${APP_PORT}
      - PROXY_TIMEOUT=${PROXY_TIMEOUT}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT}
    command: /bin/sh -c "mkdir -p /var/log/nginx && touch /var/log/nginx/access.log && touch /var/log/nginx/error.log && nginx -g 'daemon off;'"

  alert_watcher:
    build:
      context: ./watcher
    container_name: alert_watcher
    depends_on:
      - nginx
    volumes:
      # Mount host logs as read-only
      - ./nginx/logs:/var/log/nginx:ro
    env_file:
      - .env
    restart: unless-stopped

